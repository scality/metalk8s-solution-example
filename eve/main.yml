---
version: "0.2"

models:
  - Git: &git_pull
      name: git pull
      repourl: "%(prop:git_reference)s"
      method: clobber
      retryFetch: true
      haltOnFailure: true
  - ShellCommand: &wait_for_docker
      name: Wait for Docker daemon to be ready
      command: |
        bash -c '
        for i in {1..150}
        do
          docker info &> /dev/null && exit
          sleep 2
        done
        echo "Could not reach Docker daemon from buildbot worker" >&2
        exit 1'
  - ShellCommand: &add_final_status_artifact
      name: Add final status to artifacts
      command: |-
        bash -c '
          declare BUILD_STATUS_DIR=build_status
          [[ ${STEP_NAME:-} ]] && BUILD_STATUS_DIR+="/build_status/$STEP_NAME"
          mkdir -p "$BUILD_STATUS_DIR"
          echo -n "$FINAL_STATUS" > "$BUILD_STATUS_DIR/.final_status"
        '
      env: &_env_final_status_artifact
        STEP_NAME: ''
        FINAL_STATUS: ''
        TEXT: |-
          Build Url: %(prop:buildurl)s
          Artifact Url: %(prop:artifacts_public_url)s
          Branch: %(prop:branch)s
          Commit: %(prop:revision)s
      haltOnFailure: True
  - ShellCommand: &add_final_status_artifact_success
      <<: *add_final_status_artifact
      name: Add successful status to artifacts
      env: &_env_final_status_artifact_success
        <<: *_env_final_status_artifact
        FINAL_STATUS: "SUCCESSFUL"
  - ShellCommand: &add_final_status_artifact_failed
      <<: *add_final_status_artifact
      name: Add failed status to artifacts
      env: &_env_final_status_artifact_failed
        <<: *_env_final_status_artifact
        FINAL_STATUS: "FAILED"
  - ShellCommand: &setup_cache
      name: Setup proxy cache
      command: >
          curl -s http://proxy-cache/setup.sh | sudo sh &&
          . /usr/local/bin/use_scality_proxy_cache
      haltOnFailure: true
  - ShellCommand: &copy_artifacts
      name: Put the artifacts to upload in a separate directory
      env: &_env_copy_artifacts
        DEST_DIR: "artifacts"
        ARTIFACTS: ""
      command: |
        mkdir -p "$DEST_DIR"
        cp -r $ARTIFACTS "$DEST_DIR"
      haltOnFailure: true
  - Upload: &upload_artifacts
      name: Upload artifacts
      source: artifacts
      alwaysRun: True
  - Upload: &upload_build_status_artifact
      name: Upload build status to artifacts
      source: build_status
      alwaysRun: True

branches:
  user/*, feature/*, improvement/*, bugfix/*, documentation/*, release/*:
    stage: pre-merge

stages:
  pre-merge:
    worker:
      type: local
    steps:
      - ShellCommand: *add_final_status_artifact_failed
      - TriggerStages:
          name: Trigger build stage
          stage_names:
            - build
      - ShellCommand: *add_final_status_artifact_success
      - Upload: *upload_build_status_artifact

  build:
    worker:
      type: kube_pod
      path: eve/workers/pod-builder/pod.yaml
      images:
        builder: eve/workers/pod-builder
    steps:
      - ShellCommand:
          <<: *add_final_status_artifact_failed
          env:
            <<: *_env_final_status_artifact_failed
            STEP_NAME: build
      - ShellCommand: *wait_for_docker
      - Git: *git_pull
      - ShellCommand: *setup_cache
      - SetPropertyFromCommand:
          name: Set Example Solution version property
          property: example_solution_version
          command: >
            bash -c '
            . VERSION &&
            echo "$VERSION_MAJOR.$VERSION_MINOR.$VERSION_PATCH$VERSION_SUFFIX"
            '
          haltOnFailure: true
      - ShellCommand:
          name: Build Solution Example ISO
          command: DOCKER_SOCKET=http://localhost:2375 make iso
          haltOnFailure: true
      - ShellCommand:
          <<: *copy_artifacts
          env:
            <<: *_env_copy_artifacts
            ARTIFACTS: >-
              _build/example-solution-%(prop:example_solution_version)s.iso
              _build/SHA256SUM
      - Upload: *upload_artifacts
      - ShellCommand:
          <<: *add_final_status_artifact_success
          env:
            <<: *_env_final_status_artifact_success
            STEP_NAME: build
      - Upload: *upload_build_status_artifact
